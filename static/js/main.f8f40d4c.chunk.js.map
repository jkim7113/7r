{"version":3,"sources":["Inputs.js","PartOfSpeeches.js","Defnitions.js","Examples.js","App.js","index.js"],"names":["Inputs","className","autoComplete","id","type","size","PartOfSpeeches","partOfSpeech","Definitions","definition","Examples","example","App","state","wordInfo","target","isRequested","word","errorMsg","a","fetch","this","res","json","data","meanings","length","setState","console","error","map","currentWord","index","definitions","currentDef","currentEx","style","display","form","document","querySelector","addEventListener","e","preventDefault","url","value","toLowerCase","loadMeaning","log","Array","prototype","slice","call","querySelectorAll","allWordDefs","allWordClasses","allWordExamples","i","color","wordClass","classList","wordDefs","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f8f40d4c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Inputs.css'\r\n\r\nfunction Inputs() {\r\n    return(\r\n        <div className='cards'>\r\n        <div className='inputCardData'>\r\n            <p className='announcement'>Type the word to search</p>\r\n            <form>\r\n                <input autoComplete='off' id='textBox' type='text' size='30'></input>\r\n            </form>\r\n            <p className='errorMsg'>No words found</p>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {Inputs};","import React from 'react';\r\n\r\nfunction PartOfSpeeches({partOfSpeech}) {\r\n    return (\r\n        <span className={`partOfSpeech ${partOfSpeech}`}>{partOfSpeech}</span>\r\n    );\r\n\r\n}\r\n\r\nexport {PartOfSpeeches};","import React from 'react';\r\n\r\nfunction Definitions({definition,partOfSpeech}) {\r\n    return(\r\n    <li className={`definitions ${partOfSpeech}`}>{definition}</li>\r\n    );\r\n}\r\n\r\nexport {Definitions}","import React from 'react';\r\n\r\nfunction Examples({partOfSpeech, example}){\r\n    return (\r\n        <li className={`examples ${partOfSpeech}`}>{example}</li>\r\n    );\r\n}\r\n\r\nexport {Examples}","import './App.css';\nimport React, {useState} from 'react';\nimport {Inputs} from './Inputs.js';\nimport {PartOfSpeeches} from './PartOfSpeeches.js';\nimport {Definitions} from './Defnitions.js';\nimport {Examples} from './Examples.js';\n\nclass App extends React.Component{\n\n  state = {\n    wordInfo : [],\n    target : '',\n    isRequested : false,\n    word : '',\n    errorMsg : false\n  }\n\n  async loadMeaning(){\n    try{\n      var res = await fetch(this.state.target);\n      var data = await res.json();\n      \n      if(data[0].meanings.length > 0){\n        var meanings = data[0];\n      }\n      else{\n        var meanings = data[1];\n      }\n      this.setState({wordInfo:meanings.meanings, isRequested:true, word:meanings.word});\n \n    }\n    catch{\n      this.setState({isRequested:false, errorMsg:true},()=>{\n          console.error('An unexpected error occured');\n      });\n    }\n\n  } \n\n    /*loadMeaning(){\n      return new Promise((resolve,reject)=>{\n        resolve(fetch(this.state.target))\n      });\n    }*/\n  render(){\n\n    return(<div>\n      {this.state.isRequested ? (\n        <div className='words'>\n        <div className='wordCardData'>\n        <p className='word'>{this.state.word}</p>\n        {this.state.wordInfo.map((currentWord,index)=>(\n          <span key ={index}>\n            <PartOfSpeeches partOfSpeech={currentWord.partOfSpeech}/>     \n            <span className='divider'>{(index < (this.state.wordInfo.length-1))?(' | '):('')}</span>\n          </span>  \n        )\n        )\n        }\n        <ul>\n            {\n              this.state.wordInfo.map((currentWord)=>(     \n                currentWord.definitions.map((currentDef,index)=>(\n                 <Definitions key={index} partOfSpeech={currentWord.partOfSpeech} definition={currentDef.definition}/>\n              ))\n              ))\n            }\n        </ul>\n        <ul>\n          {\n            this.state.wordInfo.map((currentWord)=>(  \n              currentWord.definitions.map((currentEx,index)=>(\n               (currentEx.example)?(<Examples key={index} partOfSpeech={currentWord.partOfSpeech} example={currentEx.example}/>):(<li key={index} style={{display:'none'}}></li>)\n            ))\n            ))\n          }\n        </ul>\n\n        </div>\n        </div>\n      ):(\n        <Inputs />\n      ) }\n    </div>\n    );\n  }\n\n  componentDidMount(){\n    const form = document.querySelector('form');\n    const errorMsg = document.querySelector('.errorMsg'); \n\n    form.addEventListener('submit',(e)=>{\n      e.preventDefault();\n      var inputValue = document.querySelector('input').value;\n      var url = 'https://api.dictionaryapi.dev/api/v2/entries/en_US/'+inputValue.toLowerCase();\n\n      this.setState({target:url},async()=>{\n        await this.loadMeaning();\n        /*await this.loadMeaning().then((res)=>{\n          return res = res.json();\n      }\n      ).then((res)=>{\n        if(data[0].meanings.length > 0){\n          var meanings = data[0];\n        }\n        else{\n          var meanings = data[1];\n        }\n        this.setState({wordInfo:meanings.meanings, isRequested:true, word:meanings.word});\n      });*/\n        if(this.state.errorMsg === true){\n          errorMsg.style.display = 'inline';\n        }\n        \n      });\n      });\n  }\n\n  componentDidUpdate(){ \n    console.log(this.state.wordInfo);\n    var partOfSpeechesArray = Array.prototype.slice.call(document.querySelectorAll('.partOfSpeech'));\n\n    partOfSpeechesArray.map((word,index)=>{\n      word.addEventListener('click',()=>{\n\n        var allWordDefs= document.querySelectorAll('.definitions');\n        var allWordClasses = document.querySelectorAll('.partOfSpeech');\n        var allWordExamples = document.querySelectorAll('.examples');\n\n        for(var i=0;i<allWordDefs.length;i++){\n          allWordDefs[i].style.color = '#9baec8';\n        }\n        for(var i=0;i<allWordClasses.length;i++){\n          allWordClasses[i].style.color = '#9baec8';\n        }\n        for(var i=0;i<allWordExamples.length;i++){\n          allWordExamples[i].style.color = '#9baec8';\n        }\n\n        var wordClass = word.classList[1];\n        var wordDefs = document.querySelectorAll(`.${wordClass}`); \n        for(var i=0;i<wordDefs.length;i++){\n          wordDefs[i].style.color = 'white';\n        }\n        \n      });\n    });\n  }\n  }\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}